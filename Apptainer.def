# Build an Apptainer SIF file containing a working copy of PySR and its prereqs
Bootstrap: docker
From: julia:{{ JULIA_VERSION }}-{{ JULIA_BASE_IMAGE }}
Stage: jl

%arguments
	JULIA_VERSION=1.10.4
	JULIA_BASE_IMAGE=bullseye

Bootstrap: docker
From: python:{{ PYTHON_VERSION }}-{{ BASE_IMAGE }}
Stage: runtime

%arguments
	PYTHON_VERSION=3.12
	BASE_IMAGE=bullseye

%environment
	# Where to find Julia and its libraries
	export LD_LIBRARY_PATH="/usr/local/julia/lib:/usr/local/julia/lib/julia:$LD_LIBRARY_PATH"
	export PATH="/usr/local/julia/bin:$PATH"
	# Use the container Julia binary, put the Project TOML file in the users home directory
	export PYTHON_JULIAPKG_EXE=/usr/local/julia/bin/julia
	export PYTHON_JULIAPKG_PROJECT="$HOME/.pysr"

%files from jl
	/usr/local/julia /usr/local/julia

%files
	./requirements.txt /pysr/requirements.txt
	./pyproject.toml /pysr/pyproject.toml
	./setup.py /pysr/setup.py
	./pysr /pysr/pysr

%post
	export PATH="/usr/local/julia/bin:$PATH"
	cd /pysr

	# Install IPython and other useful libraries:
	pip3 install --no-cache-dir ipython matplotlib

	pip3 install --no-cache-dir -r ./requirements.txt

	# Install PySR:
	pip3 install --no-cache-dir .

	export PYTHON_JULIAPKG_PROJECT="$HOME/.pysr"
	python3 -c 'import pysr'

%runscript
	# Start ipython when the container is executed
	[ ! -d $HOME/.pysr ] && mkdir $HOME/.pysr
	cd /pysr
	ipython
