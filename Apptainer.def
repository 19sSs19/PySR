# Build an Apptainer SIF file containing a working copy of PySR and its prereqs
Bootstrap: docker
From: rockylinux/rockylinux:{{ ROCKY_VERSION }}

%arguments
	JULIA_RELEASE=1.10
	JULIA_RELEASE_VERSION=4
	PYSR_VERSION=0.19.3
	PYTHON_VERSION=3.12
	ROCKY_VERSION=8

%environment
	# Where to find Julia and its libraries
	export LD_LIBRARY_PATH="/opt/julia/lib:/opt/julia/lib/julia:$LD_LIBRARY_PATH"
	export PATH="/opt/julia/bin:$PATH"
	# Use the container Julia binary, put the Project TOML file in the users home directory
	export PYTHON_JULIAPKG_EXE=/opt/julia/bin/julia
	export PYTHON_JULIAPKG_PROJECT="$HOME"

%post
	dnf install -y epel-release
	dnf install -y conda wget

	cd /opt

	# Download the version of Julia specified by the JULIA_RELEASE and JULIA_RELEASE_VERSION arguments
	JULIA=julia-{{ JULIA_RELEASE }}.{{ JULIA_RELEASE_VERSION }}

	wget https://julialang-s3.julialang.org/bin/linux/x64/{{ JULIA_RELEASE }}/${JULIA}-linux-x86_64.tar.gz

	# Install it in /opt/julia
	tar zxf ${JULIA}-linux-x86_64.tar.gz
	rm ${JULIA}-linux-x86_64.tar.gz
	mv ${JULIA} julia

	# Create a conda pysr environment in /opt/conda/pysr
	. /etc/profile.d/conda.sh
	conda create -y -p /opt/conda/pysr python={{ PYTHON_VERSION }}
	conda activate /opt/conda/pysr
	conda install -y -c conda-forge ipython pysr={{ PYSR_VERSION }}
	conda deactivate

	# Activate the /opt/conda/pysr environment at runtime
	echo ". /etc/profile.d/conda.sh" >> $APPTAINER_ENVIRONMENT
	echo "conda activate /opt/conda/pysr" >> $APPTAINER_ENVIRONMENT

%runscript
	# Start ipython when the container is executed
	cd /opt/conda/pysr
	ipython
